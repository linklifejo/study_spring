package common;

import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.security.SecureRandom;

import org.apache.commons.mail.HtmlEmail;
import org.springframework.stereotype.Service;

import member.MemberVO;

@Service
public class CommonUtility {
	
	//이메일로 임시비번 보내기
	public void sendPassword(MemberVO vo, String pw) {
		boolean send = true;
		
		HtmlEmail email = new HtmlEmail();
		email.setCharset("utf-8");
		email.setDebug(true);
		
		email.setHostName("smtp.naver.com"); //이메일보낼서버지정
		//이메일로 임시비번을 보내는 이는 사이트 관리자
		email.setAuthentication("ojink2", "관리자비번"); //관리자 아이디,비번 입력
		email.setSSLOnConnect(true);  //로그인버튼 누르기
		
		try {
		email.setFrom("ojink2@naver.com", "IoT 관리자"); //보내는이 지정
		
		
		}catch(Exception e) {
			System.out.println(e.getMessage());
		}
	}
	
	
	
	//솔트를 사용해 비밀번호를 암호화하기
	public String getEncrypt(String pw, String salt) {
		pw = pw + salt;
		
		try {
			MessageDigest md		//암호화방식: SHA-256
				= MessageDigest.getInstance("SHA-256");
			md.update( pw.getBytes() );
			byte[] bytes = md.digest();
			
			StringBuffer val = new StringBuffer();
			for(byte b : bytes) {
				val.append( String.format("%02x", b) );
			}
			pw = val.toString(); //암호화된 비번		
		} catch (NoSuchAlgorithmException e) {
			e.printStackTrace();
		}
		return pw;
	}
	
	//암호화에 사용할 솔트 생성
	public String generateSalt() {
		SecureRandom random = new SecureRandom();
		byte[] bytes = new byte[16];
				
		random.nextBytes(bytes);
		//16개의 바이트를 16진수로 변환
		StringBuffer salt = new StringBuffer();
		for(byte b : bytes) {
			salt.append( String.format("%02x", b) );
		}
		return salt.toString();
	}
}
